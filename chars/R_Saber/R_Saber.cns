; サンプルキャラクター『カンフーマン』のコンスタンツとステートのファイルです。
;===========================================================================
; コンスタンツ（定数）
;===========================================================================
;---------------------------------------------------------------------------
; ここがキャラの心臓部とも言うべき場所。
; １キャラ単位のライフや大きさなど、標準のステータスを予め決めておく部分。
; このコーナー自体省略出来ません。
;---------------------------------------------------------------------------
; 基本データ
;---------------------------------------------------------------------------
[Data]
life              = 1000   ;ライフ（体力ゲージ）最大値
power             = 3000   ;パワーゲージ最大値（オプション・デフォルトは3000=Lv.3）
attack            = 100    ;攻撃力（デフォルトは１００％）
defence           = 100    ;防御力（デフォルトは１００％）
fall.defence_up   = 50     ;横に倒れている時に一時的に加える防御力（％）
liedown.time      = 60     ;横に倒れている時間（フレーム）
airjuggle         = 15     ;ジャグルポイント限界値（「小ネタ.txt」参照）
sparkno           = 2      ;デフォルトのヒットスパーク（fightfxから）
guard.sparkno     = 40     ;デフォルトのガードスパーク（fightfxから）
KO.echo           = 0      ;ＫＯ時の音声（11,0）にエコーを掛けるか否か（0=掛けない,1=掛ける）
volume            = 0      ;キャラの標準の音量（最小-255・最大255）
IntPersistIndex   = 60     ;次のラウンドへ持ち越せる「Var」のアドレスの範囲を決める（※１）
FloatPersistIndex = 40     ;次のラウンドへ持ち越せる「FVar」のアドレスの範囲を決める（※１）

;---------------------------------------------------------------------------
; ※１：変数のラウンド持ち越し方法
;
; 　変数を次のラウンドへ持ち越したい場合は、↑の
; 　「IntPersistIndex」と「FloatPersistIndex」を使う。
; 　そのやり方はM.U.G.E.Nの説明書にすら載ってないので、ここで例を元に解説。
;
; 　①IntPersistIndex = 23　（Var(23)～Var(59)までを全て次のラウンドへ持ち越せる）
; 　②FloatPersistIndex = 18（FVar(18)～FVar(39)までを全て次のラウンドへ持ち越せる）
;
; 　つまり「Var(**)（Fvar(**)）以降全ての変数を持ち越す」という命令になる。
; 　それ以前のアドレスの変数は全て持ち越さなくなる。
;
; 　全ての変数を持ち越さない場合は、
; 　IntPersistIndexは60以上、FloatPersistIndexは40以上にしておこう。
;
; 　×これはダメ×
; 　　①IntPersistIndex = 10,15,20,25　（15,20,25の部分は意味無し）
; 　　②FloatPersistIndex = 4,16 　　　（16の部分は意味無し）
; 　　これらは最初の数字以外全て無効。
; 
;---------------------------------------------------------------------------
; サイズ
;---------------------------------------------------------------------------
[Size]
xscale           = 0.5       ;キャラの横の大きさ（絶対値・float）
yscale           = 0.5       ;キャラの縦の大きさ（絶対値・float）
ground.back      = 15      ;地上にいる時の「後方の物理的な幅」
ground.front     = 16      ;地上にいる時の「前方の物理的な幅」
air.back         = 12      ;空中にいる時の「後方の物理的な幅」
air.front        = 12      ;空中にいる時の「前方の物理的な幅」
height           = 60      ;キャラの物理的な高さ（高いほど相手は飛び越しにくくなる）
attack.dist      = 160     ;相手がガード態勢に入る最低の距離
proj.attack.dist = 90      ;自分の「Projectile」に対して相手がガード態勢に入る最低の距離
proj.doscale     = 0       ;xscaleとyscaleを「Projectile」にも影響させるか否か（0=させない・1=させる）
head.pos         = -5,-90  ;キャラの標準の頭の座標（Bind系で適用される）
mid.pos          = -5,-60  ;キャラの標準の体中心の座標（Bind系で適用される）
shadowoffset     = 0       ;影のＹ軸方向の位置座標
draw.offset      = 0,0     ;キャラの表示座標（Ｘ軸,Ｙ軸）

;---------------------------------------------------------------------------
; 移動速度
;---------------------------------------------------------------------------
[Velocity]
walk.fwd     = 1.2         ;前進速度（Ｘ軸・[Statedef 20]に適用される）
walk.back    = -1.1        ;後退速度（Ｘ軸・[Statedef 20]に適用される）
run.fwd      = 5.0,0       ;前方に走る速度（Ｘ軸,Ｙ軸・[Statedef 100]に適用される）
run.back     = -5.5,-4.0   ;後方に走る速度（Ｘ軸,Ｙ軸・[Statedef 105]に適用される）
jump.neu     = 0,-8.4      ;垂直ジャンプの速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
jump.back    = -2.55       ;後方ジャンプの速度（Ｘ軸・[Statedef 40]に適用される）
jump.fwd     = 2.5         ;前方ジャンプの速度（Ｘ軸・[Statedef 40]に適用される）
runjump.back = -2.55,-8.1  ;後方に走ってからのジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
runjump.fwd  = 4,-8.1      ;前方に走ってからのジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
airjump.neu  = 0,-8.1      ;空中垂直ジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 45]に適用される）
airjump.back = -2.55       ;空中後方ジャンプ速度（Ｘ軸・[Statedef 45]に適用される）
airjump.fwd  = 2.5         ;空中前方ジャンプ速度（Ｘ軸・[Statedef 45]に適用される）

;---------------------------------------------------------------------------
; 運動関係
;---------------------------------------------------------------------------
[Movement]
airjump.num     = 1        ;空中ジャンプが出来る回数
airjump.height  = 35       ;空中ジャンプが出来る最低の高度（Ｙ軸）
yaccel          = .44      ;Ｙ軸加速度（重力）
stand.friction  = .85      ;立っている時の摩擦係数（ステートのPhysicsが「S」の時）
crouch.friction = .82      ;しゃがんでいる時の摩擦係数（ステートのPhysicsが「C」の時）

;===========================================================================
; ステート
;===========================================================================
;---------------------------------------------------------------------------
; ここからはキャラのそれぞれの行動（ステート）を設定する。
; 番号（ステートナンバー）に気を付ければ良いだけで、
; 行動の決め方もステートの数も作りたいキャラによって自由。
;
; 本来ステートは別のファイルとして扱っているものだけど、
; このようにコンスタンツファイルと一緒にまとめる事も可能。
;
; ステートの基本的な設定はおまけフォルダの「テンプレート.txt」を参照。
;===========================================================================
; 基本行動
;===========================================================================
;---------------------------------------------------------------------------
;タイムオーバー（負けた時）
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 無敵]
type = NotHitBy
trigger1 = 1 ;トリガーを何も書かず「1」にする事により、『無条件で常に実行させる命令』になる。
value = SCA
time = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;勝利ポーズ分岐（common1.cnsには無いけど、これもコモンステート）
[Statedef 180]
type = S

[State 180, ステート変更]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
;勝利ポーズ
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

[State 181,]
type = PlaySnd
trigger1 = AnimElem = 7
value = 181, random%2

;---------------------------------------------------------------------------
;イントロ開始
[Statedef 190]
type    = S
physics = N
ctrl = 0

[State 190, 1]
type = powerset
trigger1 = time = 0
trigger1 = roundno = 1
value = 1000

[State 190, 0]
type = ChangeState
trigger1 = time = 0
value = 191+random%2

;---------------------------------------------------------------------------
;イントロ1・「見せ場だな」
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0


[State 191, 特殊効果] ;「ROUND1, FIGHT!」のアナウンスが始まるまでは、このコントローラを使ってください
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態になります

[State 191, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = AnimTime = 0
value = 0

[State 191,]
type = PlaySnd
trigger1 = AnimElem = 2
value = 190,3
channel = 1

[State 191,]
type = PlaySnd
trigger1 = AnimElem = 2
value = 0,0
channel = 0

[State 191,]
type = PlaySnd
trigger1 = AnimElem = 29
value = 40,0
channel = 0

[State 191,]
type = PlaySnd
trigger1 = AnimElem = 28
value = 0,1
channel = 1

;---------------------------------------------------------------------------
;イントロ2・「空気を読め！デート中なのだぞ！」
[Statedef 192]
type = S
ctrl = 0
anim = 191
velset = 0,0


[State 192, 特殊効果] ;「ROUND1, FIGHT!」のアナウンスが始まるまでは、このコントローラを使ってください
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態になります

[State 192, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = AnimTime = 0
value = 0

[State 192,]
type = PlaySnd
trigger1 = AnimElem = 2
value = 191,0

[State 192,]
type = PlaySnd
trigger1 = AnimElem = 11
value = 191,1

[State 192,]
type = PlaySnd
trigger1 = AnimElemTime(7) = 8
value = 0,1

[State 192,]
type = PlaySnd
trigger1 = AnimElem = 8
value = 2,0

[State -1, Explod エフェクト]
Type = Explod
Trigger1 = AnimElemTime(10) = 0
Anim = 900
ID = 900
Postype = P1
Pos = 0,0
Ownpal = 1
Scale = 0.5,0.5
SprPriority = 8
BindTime = -1
IgnoreHitPause = 1
Persistent = 0
SuperMoveTime = 0
PauseMoveTime = 0

[State -1, Explod エフェクト]
Type = Explod
Trigger1 = AnimElemTime(10) = 0
Anim = 901
ID = 901
Postype = P1
Pos = 0,0
Ownpal = 1
Scale = 0.5,0.5
SprPriority = 8
BindTime = -1
IgnoreHitPause = 1
Persistent = 0
SuperMoveTime = 0
PauseMoveTime = 0

[State -1, Explod エフェクト]
Type = Explod
Trigger1 = AnimElemTime(10) = 0
Anim = 902
ID = 902
Postype = P1
Pos = 0,0
Ownpal = 1
Scale = 0.5,0.5
SprPriority = 8
BindTime = -1
IgnoreHitPause = 1
Persistent = 0
SuperMoveTime = 0
PauseMoveTime = 0
;---------------------------------------------------------------------------

; ※２：AssertSpecial
;
; 　他のコントローラでは設定出来ない『特殊な効果』を指定する命令。
; 　設定したトリガーが有効になってる間だけ一時的に適用される。
;
; 　適用出来るパラメータはこのコントローラを一つ設置する場合、最大３つまで。
; 　書式としては「flag」「flag2」「flag3」を順に加えていく形。
; 　flag2とflag3はオプション。ではその特殊効果を全て紹介。
;
; 　Intro          = イントロ（試合開始前の登場演出アクション）の状態になる。イントロステート専用。
; 　Invisible      = 自分の姿を消す。しかし残像（AfterImage）は消せない。
; 　RoundNotOver   = 現在のラウンドを過ぎない。勝利ポーズ専用。
; 　NoBarDisplay   = ライフバーを非表示にする。
; 　NoBG           = ステージの奥の画像を非表示にし、「真っ黒の背景」にする。
; 　NoFG           = ステージの手前の画像を非表示にする。
; 　NoStandGuard   = 立ちガードが出来なくなる。
; 　NoCrouchGuard  = しゃがみガードが出来なくなる。
; 　NoAirGuard     = 空中ガードが出来なくなる。
; 　NoAutoTurn     = 自動で振り向かない。
; 　NoJuggleCheck  = ジャグルをチェックしない。（ジャグルポイントが減らなくなる）
; 　NoKOSnd        = ＫＯ時の音声（11,0）を鳴らさないようにする。画面中に存在する全員に有効なので注意。
; 　NoKOSlow       = ＫＯ時のスローモーションを無効にする。（ＫＯ直前に有効にしないといけない）
; 　NoShadow       = 自分の影を消す。
; 　GlobalNoShadow = 画面中に存在する全てのプレイヤー（ヘルパーとProjectileも含む）の影を消す。
; 　NoMusic        = 演奏しているＢＧＭを止める。（プラグインによってはＢＧＭがバグるので要注意）
; 　NoWalk         = 歩かない。（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
; 　TimerFreeze    = タイムカウント（制限時間）を停止する。
; 　UnGuardable    = 自分の全ての攻撃が『ガード不可』になる。
;
;---------------------------------------------------------------------------
;挑発
[Statedef 195]
type = S
movetype = I
physics = S
ctrl = 0
anim = 195
velset = 0,0
sprpriority = 2

[State -1, Explod エフェクト]
Type = Explod
Trigger1 = time = 0
Anim = 196
ID = 196
Postype = P1
Pos = 0,0
Ownpal = 1
Scale = 0.5,0.5
SprPriority = 8
BindTime = -1
IgnoreHitPause = 1
Persistent = 0
SuperMoveTime = 0
PauseMoveTime = 0

[State -1, Explod エフェクト]
Type = Explod
Trigger1 = AnimElem = 33
Anim = 197
ID = 197
Postype = P1
Pos = 0,0
Ownpal = 1
Scale = 0.5,0.5
SprPriority = 8
BindTime = -1
IgnoreHitPause = 1
Persistent = 0
SuperMoveTime = 0
PauseMoveTime = 0

[State 195,]
type = PlaySnd
trigger1 = AnimElem = 3
value = 195,0
channel = 0

[State 195,]
type = PlaySnd
trigger1 = AnimElem = 11
value = 195,1
channel = 0

[State 195,]
type = PlaySnd
trigger1 = AnimElem = 18
value = 195,2
channel = 0

[State 195,]
type = PlaySnd
trigger1 = AnimElem = 27
value = 195,3
channel = 0

[State 195,]
type = PlaySnd
trigger1 = AnimElem = 33
value = 2,2

[State 195, 1]
type = poweradd
trigger1 = AnimElem = 9
trigger2 = AnimElem = 16
trigger3 = AnimElem = 25
value = 500

[State 195, 1]
type = Varset
trigger1 = AnimElem = 33
var(0) = 600

[State 195, 1]
type = Varset
trigger1 = AnimElem = 33
var(1) = 600

[State 195, 1]
type = Varset
trigger1 = AnimElem = 33
var(2) = 600

[State 195, コントロール]
type = CtrlSet
trigger1 = AnimElem = 9
value = 1            ;キーコントロールが可能になる。

[State 195, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
; ブリス用ヘルパー記述
;===========================================================================

[Statedef 8000]
type    = A
movetype= I
physics = N
anim	= 9025
juggle  = 0
sprpriority = -3


[State 8000, 立ち絵アニメ消去] ;１コマ目以外の時は消去
Type = RemoveExplod
triggerall = numexplod(9020) > 0
trigger1 = parent,AnimElem <= 2
trigger2 = parent,Anim != 9020
ID = 9020
ignorehitpause = 1

[State 8000, 立ち絵アニメ表示]
type = Explod
triggerall = numexplod(9020) <= 0
trigger1 = parent,Anim = 9020
trigger1 = parent,AnimElemtime(1)=0
anim = 9027
ID = 9020
pos = 0,0 
postype = p1
facing = -1*(parent, Facing)
scale = 0.5,0.5
ignorehitpause = 1

[State 8000,];ヘルパー位置常時親位置
type = PosSet
trigger1 = 1
x = parent,pos x
y = parent,pos y
ignorehitpause = 1

;消滅防ぎ用の全攻撃無敵
[State 8000 ]
type = NotHitBy
value = SCA
trigger1 = 1
ignorehitpause = 1

;バグ回避保険用
[State 8000 ]
type = HitOverride
trigger1 = 1
attr = SCA,AA,AT,AP
slot = 1
stateno = 8000
time = 1
forceair = 0
ignorehitpause = 1

;===========================================================================
; ヘルパー分身回避汎用消滅ステート
;===========================================================================
[Statedef 8888]
type    = S
movetype= I
physics = N
anim	= 9022
sprpriority = -3

;時間経過等で自然消滅
[State 8888 end]
type = Destroyself
trigger1 = time >= 0

;先行入力用ダミーアニメ
[statedef 99999]
type = A
movetype = I
physics = N
ctrl = 0
anim = 9999

[state 99999, 間違いで本体が来たら立ちへ移行]
type = selfstate
trigger1 = !ishelper
value = 0

[state 99999, 不可視化]
type = assertspecial
trigger1 = 1
flag = invisible
flag2= noshadow

[state 99999, 無敵化]
type = nothitby
trigger1 = 1
value = SCA,AA,AP,AT

[state 99999, posset]
type = posset
trigger1 = 1
x = root,pos X
y = 9999

[state 99999, turn]
type = turn
trigger1 = root,facing != facing

[State -1, 喝采は剣戟のごとくEx]
type = varset
triggerall = command = "喝采は剣戟のごとくEx"
triggerall = var(59) = 0
v = 20
value = 15;先行入力猶予15-1F
trigger1 = Power >= 1000
trigger2 = Var(3) > 0

[State -1, 喝采は剣戟のごとくa]
type = varset
trigger1 = command = "喝采は剣戟のごとくa"
triggerall = var(59) = 0
v = 21
value = 15;先行入力猶予15-1F

[State -1, 喝采は剣戟のごとくb]
type = varset
trigger1 = command = "喝采は剣戟のごとくb"
triggerall = var(59) = 0
v = 22
value = 15;先行入力猶予15-1F

[State 99999, 喝采Ex先行入力フレーム減算]
type = varadd
trigger1 = var(20) > 0
var(20) = -1

[State 99999, 喝采a先行入力フレーム減算]
type = varadd
trigger1 = var(21) > 0
var(21) = -1

[State 99999, 喝采b先行入力フレーム減算]
type = varadd
trigger1 = var(22) > 0
var(22) = -1